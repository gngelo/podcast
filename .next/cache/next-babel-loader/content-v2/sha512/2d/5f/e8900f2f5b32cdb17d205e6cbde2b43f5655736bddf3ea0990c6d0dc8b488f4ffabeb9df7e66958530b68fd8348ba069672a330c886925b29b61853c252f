{"ast":null,"code":"import _defineProperty from \"C:/Users/gngel/OneDrive/\\xC1rea de Trabalho/podcast/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gngel\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\podcast\\\\src\\\\pages\\\\_app.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { Header } from '../components/Header';\nimport { Player } from '../components/Player';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport '../styles/globals.scss';\nimport styles from '../styles/app.module.scss';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      isPlaying: isPlaying,\n      play: play,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/gngel/OneDrive/Área de Trabalho/podcast/src/pages/_app.tsx"],"names":["useState","Header","Player","PlayerContext","styles","MyApp","Component","pageProps","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingState","state","wrapper"],"mappings":";;;;;;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,wBAAP;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACDP,QAAQ,CAAC,EAAD,CADP;AAAA,MAChCQ,WADgC;AAAA,MACnBC,cADmB;;AAAA,mBAEeT,QAAQ,CAAC,CAAD,CAFvB;AAAA,MAEhCU,mBAFgC;AAAA,MAEXC,sBAFW;;AAAA,mBAGLX,QAAQ,CAAC,KAAD,CAHH;AAAA,MAGhCY,SAHgC;AAAA,MAGrBC,YAHqB;;AAKvC,WAASC,IAAT,CAAcC,OAAd,EAAsB;AACpBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,UAAT,GAAqB;AACnBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAwC;AACtCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;;AAED,sBAEE,QAAC,aAAD,CAAe,QAAf;AAAyB,IAAA,KAAK,EAAE;AAC9BV,MAAAA,WAAW,EAAXA,WAD8B;AAE9BE,MAAAA,mBAAmB,EAAnBA,mBAF8B;AAG9BE,MAAAA,SAAS,EAATA,SAH8B;AAI9BE,MAAAA,IAAI,EAAJA,IAJ8B;AAK9BE,MAAAA,UAAU,EAAVA,UAL8B;AAM9BC,MAAAA,eAAe,EAAfA;AAN8B,KAAhC;AAAA,2BAQE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACe,OAAvB;AAAA,8BACE;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD,oBAAeZ,SAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UAFF;AAmBD;;GAtCQF,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["\nimport { useState } from 'react';\nimport { Header } from '../components/Header';\nimport { Player } from '../components/Player';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\nimport '../styles/globals.scss';\nimport styles from '../styles/app.module.scss';\n\nfunction MyApp({ Component, pageProps }) {\n  const [episodeList, setEpisodeList] = useState([]);\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false); \n  \n  function play(episode){\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay(){\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state: boolean){\n    setIsPlaying(state);\n  }\n\n  return (\n\n    <PlayerContext.Provider  value={{ \n      episodeList, \n      currentEpisodeIndex, \n      isPlaying, \n      play,\n      togglePlay,\n      setPlayingState\n      }}>\n      <div className={styles.wrapper}>\n        <main>\n          <Header/>     \n          <Component {...pageProps} />\n        </main>\n        <Player/>\n      </div>\n    </PlayerContext.Provider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}