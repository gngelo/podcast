{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gngel\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\podcast\\\\src\\\\pages\\\\episode\\\\[slug].tsx\";\nimport { api } from '../../services/api';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbanailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar episodio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      children: episode.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["C:/Users/gngel/OneDrive/√Årea de Trabalho/podcast/src/pages/episode/[slug].tsx"],"names":["api","format","parseISO","ptBR","convertDurationToTimeString","styles","Image","Episode","episode","thumbanailContainer","thumbnail","title","members","publishedAt","durationAsString","description","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport { api } from '../../services/api';\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\nimport styles from './episode.module.scss';\r\nimport Image from 'next/image';\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    members: string;\r\n    publishedAt: string;\r\n    duration: number;\r\n    durationAsString: string;\r\n    description: string;\r\n    url: string;\r\n  }\r\n  \r\n  type EpisodeProps = {\r\n    episode: Episode;\r\n  }\r\nexport default function Episode({ episode } : EpisodeProps){\r\n\r\n    \r\n    return(\r\n        <div className={styles.episode}>\r\n            <div className={styles.thumbanailContainer}>\r\n                <button type=\"button\">\r\n                    <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\r\n                </button>\r\n                <Image\r\n                    width={700}\r\n                    height={160}\r\n                    src={episode.thumbnail}\r\n                    objectFit=\"cover\"\r\n                />\r\n                <button type=\"button\">\r\n                    <img src=\"/play.svg\" alt=\"Tocar episodio\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <header>\r\n                <h1>{episode.title}</h1>\r\n                <span>{episode.members}</span>\r\n                <span>{episode.publishedAt}</span>\r\n                <span>{episode.durationAsString}</span>\r\n            </header>\r\n\r\n            <div className={styles.description}>\r\n                {episode.description}\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async()=>{\r\n    return{\r\n        paths:[],\r\n        fallback: 'blocking'\r\n    }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async(ctx)=>{\r\n    \r\n    const { slug } = ctx.params;\r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      }\r\n    return{\r\n        props:{\r\n            episode,\r\n        },\r\n        revalidate: 60 * 60 * 24,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}