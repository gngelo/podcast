{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gngel\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\podcast\\\\src\\\\pages\\\\index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latesEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpsodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  return {\n    props: {\n      episodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n}; //SPA single page aplication\n// useEffect(() => {\n//   fetch('http://localhost:3333/episodes')\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n// }, [])\n//SSR server sider render\n// export async function getServerSideProps() {\n//   const response = await fetch('')\n//   const data = await response.json()\n//   return{\n//     props: {\n//       epsodes: data,\n//     }\n//   }\n// }\n// SSG \n// export async function getStaticProps() {\n//   const response = await fetch('http://localhost:3333/episodes')\n//   const data = await response.json()\n//   return {\n//     props: {\n//       episodes: data,\n//     },\n//     revalidate: 60 * 60 * 8,\n//   }\n// }","map":{"version":3,"sources":["C:/Users/gngel/OneDrive/Área de Trabalho/podcast/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","props","homepage","latesEpisodes","allEpsodes","getStaticProps","data","get","params","_limit","_sort","_order","episodes","map","episode","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","revalidate"],"mappings":";;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAmBA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAE7C,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,QAAvB;AAAA,4BACE;AAAS,MAAA,SAAS,EAAEH,MAAM,CAACI,aAA3B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAS,MAAA,SAAS,EAAEJ,MAAM,CAACK;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAW;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,GAAG,CAACU,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHd;AAILC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJZ;AAKLC,MAAAA,WAAW,EAAEzB,MAAM,CAACC,QAAQ,CAACmB,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAEzB;AAAT,OAA7C,CALd;AAML0B,MAAAA,QAAQ,EAAEC,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,gBAAgB,EAAE3B,2BAA2B,CAACyB,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CAAP,CAPxC;AAQLI,MAAAA,WAAW,EAAEZ,OAAO,CAACY,WARhB;AASLC,MAAAA,GAAG,EAAEb,OAAO,CAACU,IAAR,CAAaG;AATb,KAAP;AAWD,GAZgB,CAAjB;AAcA,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACLW,MAAAA;AADK,KADF;AAILgB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA7BM,C,CA+BP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { GetStaticProps  } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  publishedAt: string;\n  duration: number;\n  durationAsString: string;\n  description: string;\n  url: string;\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n\n  return (\n    <div className={styles.homepage}>\n      <section className={styles.latesEpisodes}> \n        <h2>Últimos lançamentos</h2>\n\n        <ul>\n          \n        </ul>\n      </section> \n      <section className={styles.allEpsodes}> \n      </section>     \n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async() => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  }) \n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBR}),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    }\n  })\n\n  return {\n    props: {\n      episodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}\n\n//SPA single page aplication\n// useEffect(() => {\n//   fetch('http://localhost:3333/episodes')\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n// }, [])\n\n//SSR server sider render\n// export async function getServerSideProps() {\n//   const response = await fetch('')\n//   const data = await response.json()\n\n//   return{\n//     props: {\n//       epsodes: data,\n//     }\n//   }\n// }\n\n// SSG \n// export async function getStaticProps() {\n//   const response = await fetch('http://localhost:3333/episodes')\n//   const data = await response.json()\n\n//   return {\n//     props: {\n//       episodes: data,\n//     },\n//     revalidate: 60 * 60 * 8,\n//   }\n// }"]},"metadata":{},"sourceType":"module"}