{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gngel\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\podcast\\\\src\\\\pages\\\\episode\\\\[slug].tsx\";\nimport { api } from '../../services/api';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["C:/Users/gngel/OneDrive/√Årea de Trabalho/podcast/src/pages/episode/[slug].tsx"],"names":["api","format","parseISO","ptBR","convertDurationToTimeString","Episode","episode","title","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAGA,SAASA,GAAT,QAAoB,oBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAiBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4C;AAGvD,sBACI;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAMC,GAAN,IAAY;AAEtD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,GAAG,CAACa,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMJ,OAAO,GAAG;AACZQ,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADG;AAEZP,IAAAA,KAAK,EAAEK,IAAI,CAACL,KAFA;AAGZQ,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHJ;AAIZC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJF;AAKZC,IAAAA,WAAW,EAAEhB,MAAM,CAACC,QAAQ,CAACU,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAAEhB;AAAT,KAA1C,CALP;AAMZiB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CANJ;AAOZG,IAAAA,gBAAgB,EAAEnB,2BAA2B,CAACiB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAPjC;AAQZI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WARN;AASZC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AATH,GAAhB;AAWA,SAAM;AACFC,IAAAA,KAAK,EAAC;AACFpB,MAAAA;AADE,KADJ;AAIFqB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJpB,GAAN;AAMH,CAtBM","sourcesContent":["\r\nimport { GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport { api } from '../../services/api';\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    members: string;\r\n    publishedAt: string;\r\n    duration: number;\r\n    durationAsString: string;\r\n    description: string;\r\n    url: string;\r\n  }\r\n  \r\n  type EpisodeProps = {\r\n    episode: Episode;\r\n  }\r\nexport default function Episode({ episode } : EpisodeProps){\r\n\r\n    \r\n    return(\r\n        <h1>{episode.title}</h1>\r\n    )\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async(ctx)=>{\r\n    \r\n    const { slug } = ctx.params;\r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      }\r\n    return{\r\n        props:{\r\n            episode,\r\n        },\r\n        revalidate: 60 * 60 * 24,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}